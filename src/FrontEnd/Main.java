/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;


import BackEnd.ConexaoMySQL;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Igor
 */
public class Main extends javax.swing.JFrame {
    
    private ConexaoMySQL c;
    private int CodUsuario;
    
    
    public Main() {
        initComponents();
        this.c = new ConexaoMySQL();

        
        //Abrindo 
       try{ 
            this.CodUsuario = new FoLogin().setValidarLogin(); 
            
            String SQL ="Select nome from funcionario where CodFuncionario like '"+CodUsuario+"';";          
            this.c.setResultSet(SQL);
            this.c.getResultSet().next();
            
            String UsuarioLogado = String.valueOf(this.c.getResultSet().getString("Nome"));
           

            setTitle("Lavajato. Usuário: "+UsuarioLogado);
            if(this.CodUsuario == 0){

                JOptionPane.showMessageDialog(this, "Fechando aplicação ...");
                System.exit(0);
            }
            this.setConfiguracoesLogin();
       }
       catch(SQLException e){
           System.exit(0);
       }
        
       this.setPreencher();
    }
    
    private void setPreencher(){
       DefaultTableModel dtm = (DefaultTableModel) grdLista.getModel();
    
       //Limpar
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
    
        
        //Preencher Lista de Espera 
        
        try{
            String SQL="SELECT * FROM vw_listarLimpezas;";
            
            this.c.setResultSet(SQL);
            if(this.c.getResultSet().next()){
             do{
                 
                 
                    dtm.addRow(
                        new Object[]{
                            
                        this.c.getResultSet().getString("id"),                           
                        this.c.getResultSet().getString("Status"),                           
                        this.c.getResultSet().getString("Placa"),                           
                        this.c.getResultSet().getString("Modelo"),
                        this.c.getResultSet().getString("Cor"),
                        this.c.getResultSet().getString("DataHoraEntrada"),
                        this.c.getResultSet().getString("Limpeza")
                                
            
                    }
                    );
                 
             }while(this.c.getResultSet().next());
            }
        }

        catch(SQLException e){
                JOptionPane.showMessageDialog(this, e);
        }

    }

    
    
    //Setando oque o usuário normal não pode ver
    private void setConfiguracoesLogin(){
        
        try{
            String SQL ="Select * from funcionario where CodFuncionario = "+ CodUsuario;
           
            this.c.setResultSet(SQL);            
            this.c.getResultSet().next();
            
            if(!this.c.getResultSet().getBoolean("IsAdministrador")){
                mnRelatorios.setVisible(false);
                miFuncionarios.setVisible(false);
                miLimpezas.setVisible(false);

            }     
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCheckIn = new javax.swing.JButton();
        btnCheckOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grdLista = new javax.swing.JTable();
        btnCheckOut1 = new javax.swing.JButton();
        btnSobre = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnConfiguracoes = new javax.swing.JMenu();
        miAlterarSenha = new javax.swing.JMenuItem();
        miSair = new javax.swing.JMenuItem();
        mnCadastros = new javax.swing.JMenu();
        miFuncionarios = new javax.swing.JMenuItem();
        miProprietarios = new javax.swing.JMenuItem();
        miVeiculos = new javax.swing.JMenuItem();
        miLimpezas = new javax.swing.JMenuItem();
        mnRelatorios = new javax.swing.JMenu();
        miLimpezasEfetuadas = new javax.swing.JMenuItem();
        miFaturamentoGeralAnual = new javax.swing.JMenuItem();
        miFaturamentoPorTipoDeLimpeza = new javax.swing.JMenuItem();
        miFaturamentoPorModalidadeVeiculo = new javax.swing.JMenuItem();
        miPorcentagemTipoLimeza = new javax.swing.JMenuItem();
        miRelatoriosLogin = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnCheckIn.setText("Check-In");
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        btnCheckOut.setText("Check-Out");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        grdLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Status", "Placa", "Modelo", "Cor", "Data e Hora", "Tipo de Limpeza"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grdLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(grdLista);
        if (grdLista.getColumnModel().getColumnCount() > 0) {
            grdLista.getColumnModel().getColumn(0).setMaxWidth(25);
            grdLista.getColumnModel().getColumn(1).setMaxWidth(75);
            grdLista.getColumnModel().getColumn(2).setMaxWidth(100);
            grdLista.getColumnModel().getColumn(3).setMaxWidth(75);
            grdLista.getColumnModel().getColumn(4).setMaxWidth(60);
        }

        btnCheckOut1.setText("Fechar");
        btnCheckOut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOut1ActionPerformed(evt);
            }
        });

        btnSobre.setText("Sobre");
        btnSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSobreActionPerformed(evt);
            }
        });

        mnConfiguracoes.setText("Configurações");

        miAlterarSenha.setText("Alterar Senha");
        miAlterarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAlterarSenhaActionPerformed(evt);
            }
        });
        mnConfiguracoes.add(miAlterarSenha);

        miSair.setText("Sair");
        miSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSairActionPerformed(evt);
            }
        });
        mnConfiguracoes.add(miSair);

        jMenuBar1.add(mnConfiguracoes);

        mnCadastros.setText("Cadastros");

        miFuncionarios.setText("Funcionarios");
        miFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFuncionariosActionPerformed(evt);
            }
        });
        mnCadastros.add(miFuncionarios);

        miProprietarios.setText("Proprietarios");
        miProprietarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miProprietariosActionPerformed(evt);
            }
        });
        mnCadastros.add(miProprietarios);

        miVeiculos.setText("Veículos");
        miVeiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miVeiculosActionPerformed(evt);
            }
        });
        mnCadastros.add(miVeiculos);

        miLimpezas.setText("Tipo deLimpezas");
        miLimpezas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLimpezasActionPerformed(evt);
            }
        });
        mnCadastros.add(miLimpezas);

        jMenuBar1.add(mnCadastros);

        mnRelatorios.setText("Relatórios");

        miLimpezasEfetuadas.setText("Limpezas Efetuadas");
        miLimpezasEfetuadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLimpezasEfetuadasActionPerformed(evt);
            }
        });
        mnRelatorios.add(miLimpezasEfetuadas);

        miFaturamentoGeralAnual.setText("Faturamento geral anual");
        miFaturamentoGeralAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFaturamentoGeralAnualActionPerformed(evt);
            }
        });
        mnRelatorios.add(miFaturamentoGeralAnual);

        miFaturamentoPorTipoDeLimpeza.setText("Faturamento por tipo de limpeza");
        miFaturamentoPorTipoDeLimpeza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFaturamentoPorTipoDeLimpezaActionPerformed(evt);
            }
        });
        mnRelatorios.add(miFaturamentoPorTipoDeLimpeza);

        miFaturamentoPorModalidadeVeiculo.setText("Faturamento por modalidade de veículo");
        miFaturamentoPorModalidadeVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFaturamentoPorModalidadeVeiculoActionPerformed(evt);
            }
        });
        mnRelatorios.add(miFaturamentoPorModalidadeVeiculo);

        miPorcentagemTipoLimeza.setText("Porcentagem por tipo de limpeza efetuada");
        miPorcentagemTipoLimeza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPorcentagemTipoLimezaActionPerformed(evt);
            }
        });
        mnRelatorios.add(miPorcentagemTipoLimeza);

        miRelatoriosLogin.setText("Relatórios de Login");
        miRelatoriosLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRelatoriosLoginActionPerformed(evt);
            }
        });
        mnRelatorios.add(miRelatoriosLogin);

        jMenuBar1.add(mnRelatorios);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCheckIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCheckOut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCheckOut1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSobre))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheckIn)
                    .addComponent(btnCheckOut)
                    .addComponent(btnCheckOut1)
                    .addComponent(btnSobre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSairActionPerformed
        // TODO add your handling code here:
        
        System.exit(0);
        
    }//GEN-LAST:event_miSairActionPerformed

    private void miFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFuncionariosActionPerformed
        // TODO add your handling code here:
        new CaFuncionarios().setVisible(true);
        
    }//GEN-LAST:event_miFuncionariosActionPerformed

    private void miLimpezasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLimpezasActionPerformed
        // TODO add your handling code here:
         new CaTipoLimpeza().setVisible(true);
       
        
    }//GEN-LAST:event_miLimpezasActionPerformed

    private void miVeiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miVeiculosActionPerformed
        // TODO add your handling code here:
        new CadastroVeiculos().setVisible(true);
        

    }//GEN-LAST:event_miVeiculosActionPerformed

    private void miProprietariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miProprietariosActionPerformed
        // TODO add your handling code here:
        new CaProprietarios().setVisible(true);
        
        
    }//GEN-LAST:event_miProprietariosActionPerformed

    private void miAlterarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAlterarSenhaActionPerformed
        // TODO add your handling code here:
        new CaAlterarSenha(CodUsuario).setVisible(true); 
        
    }//GEN-LAST:event_miAlterarSenhaActionPerformed

    private void btnCheckOut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOut1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Fechando Aplicação ...");
        System.exit(0);
    }//GEN-LAST:event_btnCheckOut1ActionPerformed

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        // TODO add your handling code here:
        
        new CaCheckIn(CodUsuario).setVisible(true);
        
        setPreencher();
        
        
    }//GEN-LAST:event_btnCheckInActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
                
       DefaultTableModel dtm = (DefaultTableModel) grdLista.getModel();
        if(this.grdLista.getRowCount()>0){
            
            if(this.grdLista.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(this, "Por favor escolha o item que será editado.");
            }
            else{
                
            String Codigo = String.valueOf(dtm.getValueAt(grdLista.getSelectedRow(), 0));
            
            
                try {                  
                    String SQL ="Select CodFuncionarioCheckOut as Cod, placa as Placa from controlelimpezas where CodControleLimpezas="+Codigo;
                    this.c.setResultSet(SQL);
                    this.c.getResultSet().next();                 
                    String Checkout= String.valueOf(this.c.getResultSet().getObject("Cod"));
                    String Placa= String.valueOf(this.c.getResultSet().getObject("Placa"));
                    
                    if(Checkout == "null"){
                        if(JOptionPane.showConfirmDialog(this, "Finalizou a limpeza do Veículo placa: "+Placa+" ?","Finalizar Limpeza", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){

                            String SQL2="update controlelimpezas set CodFuncionarioCheckOut='"+CodUsuario +" ', DataHoraFinalizado = now() where(CodControleLimpezas= "+Codigo+");";
                            
                            this.c.SQLExecute(SQL2);

                            //System.out.print("adicionando checkout  "+SQL2);
                        }
                    }
                    else{
                        
                            
                             new CaCheckOut(Codigo).setVisible(true);
                             
                             
                            //String SQL2="update controlelimpezas set DataHoraSaida = now() where(CodControleLimpezas= "+Codigo+");";
                            //this.c.SQLExecute(SQL2);

                            //System.out.print("Finalizando limpeza  "+SQL2);
                        
                        
                    }



                    //System.out.print(Checkout);
                        
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, e);
                }
                
            }


        }
        else{
            JOptionPane.showMessageDialog(this, "A lista está vazia.");        
        }
     
        this.setPreencher();
        
        
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void miLimpezasEfetuadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLimpezasEfetuadasActionPerformed
        // TODO add your handling code here:
 
        String [] CamposMostrar = new String [] {"Placa"," Modelo"," Modalidade"," Proprietario"," Funcionario do CheckIn"," Funcionario do CheckOut"," Hora da Entrada"," Hora Finalizado"," Hora da Saida"," Forma de Pagamento"," PreçoBruto"," Imposto"," Preço Liquido"};//O nome das colunas que eu quero mostrar noo grid
        String [] CamposTabela = new String [] {"Placa","Modelo", "Modalidade", "Proprietario", "FuncionarioDoCheckIn", "FuncionarioDoCheckOut","HoraDeEntrada", "HoraFinalizado", "HoraSaida", "FormaDePagamento", "PreçoBruto", "Imposto","PreçoLiquido"};// o nome das colunas que a view retorna exatamente como está escrito
        
        new FoRelatorios("Relatório: Faturamento geral anual", CamposMostrar,CamposTabela, "vw_RelatorioCompleto").setVisible(true);    
        
        
      
         
    }//GEN-LAST:event_miLimpezasEfetuadasActionPerformed

    private void miFaturamentoGeralAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFaturamentoGeralAnualActionPerformed
        // TODO add your handling code here:
        
         
        String [] CamposMostrar = new String [] {"Ano", "Preço"};//O nome das colunas que eu quero mostrar noo grid
        String [] CamposTabela = new String [] {"Ano", "Preço"};// o nome das colunas que a view retorna exatamente como está escrito
        
        new FoRelatorios("Relatório: Limpezas Efetuadas", CamposMostrar,CamposTabela, "vw_FaturamentoAnual").setVisible(true);   
        System.out.print("\nComo é relatório de faturamento as limpezas que não foram finalizadas ficam como pendentes.\n");
    }//GEN-LAST:event_miFaturamentoGeralAnualActionPerformed

    private void miFaturamentoPorTipoDeLimpezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFaturamentoPorTipoDeLimpezaActionPerformed
        // TODO add your handling code here:
        
        
        String [] CamposMostrar = new String [] {"Tipo de Limpeza", "Faturamento"};//O nome das colunas que eu quero mostrar noo grid
        String [] CamposTabela = new String [] {"TipoLimpeza", "Faturamento"};// o nome das colunas que a view retorna exatamente como está escrito
        
        new FoRelatorios("Relatório: Faturamento por tipo de limpeza ", CamposMostrar,CamposTabela, "vw_FaturamentoPorTipo").setVisible(true);        
        
    }//GEN-LAST:event_miFaturamentoPorTipoDeLimpezaActionPerformed

    private void miFaturamentoPorModalidadeVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFaturamentoPorModalidadeVeiculoActionPerformed
        // TODO add your handling code here:
        
         
        String [] CamposMostrar = new String [] {"Modalidade", "Faturamento"};//O nome das colunas que eu quero mostrar noo grid
        String [] CamposTabela = new String [] {"Modalidade", "Faturamento"};// o nome das colunas que a view retorna exatamente como está escrito
        
        new FoRelatorios("Relatório: Faturamento por modalidade", CamposMostrar,CamposTabela, "vw_FaturamentoPorModalidade").setVisible(true);       
        
    }//GEN-LAST:event_miFaturamentoPorModalidadeVeiculoActionPerformed

    private void miPorcentagemTipoLimezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPorcentagemTipoLimezaActionPerformed
        // TODO add your handling code here:
        
         
        String [] CamposMostrar = new String [] {"Tipo de Limpeza", "Percentual"};//O nome das colunas que eu quero mostrar noo grid
        String [] CamposTabela = new String [] {"TipoLimpeza", "Porcentagem"};// o nome das colunas que a view retorna exatamente como está escrito
        
        new FoRelatorios("Relatório: Percentual por tipo de limpeza", CamposMostrar,CamposTabela, "vw_PercentualPorTipo").setVisible(true);       
        
    }//GEN-LAST:event_miPorcentagemTipoLimezaActionPerformed

    private void miRelatoriosLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRelatoriosLoginActionPerformed
        // TODO add your handling code here:
        
         
        String [] CamposMostrar = new String [] {"Usuário", "Data e hora de Acesso"};//O nome das colunas que eu quero mostrar noo grid
        String [] CamposTabela = new String [] {"Nome", "DataHora"};// o nome das colunas que a view retorna exatamente como está escrito
        
        new FoRelatorios("Relatório: Registro de Logins", CamposMostrar,CamposTabela, "listarLogins").setVisible(true);       
        
    }//GEN-LAST:event_miRelatoriosLoginActionPerformed

    private void btnSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSobreActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "A versão usada desse sistea é a 1.4.1.1");
    }//GEN-LAST:event_btnSobreActionPerformed

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnCheckOut1;
    private javax.swing.JButton btnSobre;
    private javax.swing.JTable grdLista;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem miAlterarSenha;
    private javax.swing.JMenuItem miFaturamentoGeralAnual;
    private javax.swing.JMenuItem miFaturamentoPorModalidadeVeiculo;
    private javax.swing.JMenuItem miFaturamentoPorTipoDeLimpeza;
    private javax.swing.JMenuItem miFuncionarios;
    private javax.swing.JMenuItem miLimpezas;
    private javax.swing.JMenuItem miLimpezasEfetuadas;
    private javax.swing.JMenuItem miPorcentagemTipoLimeza;
    private javax.swing.JMenuItem miProprietarios;
    private javax.swing.JMenuItem miRelatoriosLogin;
    private javax.swing.JMenuItem miSair;
    private javax.swing.JMenuItem miVeiculos;
    private javax.swing.JMenu mnCadastros;
    private javax.swing.JMenu mnConfiguracoes;
    private javax.swing.JMenu mnRelatorios;
    // End of variables declaration//GEN-END:variables
}
